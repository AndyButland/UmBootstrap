@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.Models.Blocks;
@{
    var content = Model.Content;
    var tabItems = content.Value<IEnumerable<BlockListItem>>("FeaturePropertyTabs")?.ToList();
}

@{
    Layout = "_Layout_Features.cshtml";
}

@if (tabItems != null && tabItems.Any())
{
    <ul class="nav nav-tabs" id="n@(content.Key.ToString("N"))" role="tablist">
        @foreach (var tab in tabItems.Select(tabItem => tabItem.Content))
        {
            <li class="nav-item" role="presentation">
                <button class="nav-link @(tab.Key == tabItems.First().Content.Key ? "active" : "")" id="n@(tab.Key.ToString("N"))-tab" data-bs-toggle="tab" data-bs-target="#n@(tab.Key.ToString("N"))"
                        type="button" role="tab" aria-controls="n@(tab.Key.ToString("N"))" aria-selected="@(tab.Key == tabItems.First().Content.Key ? "true" : "false")">
                    @tab.Value("featurePropertyFeatureTitle")
                </button>
            </li>
        }
    </ul>
    <ul class="tab-content" id="n@(content.Key.ToString("N"))">
        @foreach (var tab in tabItems.Select(tabItem => tabItem.Content))
        {
            <div class="tab-pane" id="n@(tab.Key.ToString("N"))" role="tabpanel" aria-labelledby="n@(tab.Key.ToString("N"))-tab">
                <h2>@tab.Value("featurePropertyFeatureDescription")</h2>

                @*<p>@tab.Value("featurePropertyTabsContent")</p>
                    does not work 
                *@
                
                @if (tab.Value("richTextContent") != null)
                // if it's a rich text editor, use this:
                {
                    @tab.Value("richTextContent")
                }
                @if (tab.Value("featureImage") != null)
                // if it's an image, use this:
                {
                    var typedMediaPickerSingle = Model.Content.Value<Umbraco.Cms.Core.Models.MediaWithCrops>("image");
                    if (typedMediaPickerSingle != null)
                    {
                        <img src="@typedMediaPickerSingle.MediaUrl()" style="object-fit:cover; width:100%; height:100%;" />
                    }
                    else
                    {
                        <p>Missing image</p>
                    }
                }
            </div>
        }
    </ul>
}


